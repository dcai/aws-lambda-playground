name: Publish api to lambda

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: install packages
        run: npm ci

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/upload-artifact@v2
        with:
          name: api-artifact
          path: ./

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: api-artifact

      - run: ls -la
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      # - name: create lambda function
      #   run: aws lambda create-function --function-name friendlyrobot-test-api --zip-file fileb://code.zip --handler index.handler --runtime nodejs14.x --role  arn:aws:iam::366645423398:role/service-role/admin
      - run: zip -r code.zip index.js node_modules

      - name: update lambda function
        run: aws lambda update-function-code --function-name friendlyrobot-test-api --zip-file fileb://code.zip
